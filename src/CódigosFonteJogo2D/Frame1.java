/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CÃ³digosFonteJogo2D;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;

/**
 *
 * @author user
 */
public class Frame1 extends javax.swing.JFrame implements Runnable {

    private int mx = 15;
    private int my = 15;
    private double dx, dy;
    private int y_inicial;
    private int x_inicial;
    private boolean direction;

    BolhaTiro Tiro;

    public Frame1() {
        initComponents();
        createBufferStrategy(2);
        Thread t = new Thread(this);
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 587, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        mx = evt.getX();
        my = evt.getY();
    }//GEN-LAST:event_formMouseMoved

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked

        if (Tiro.isSobeBolha()) {
            return;
        }

        dx = mx - Tiro.getX();
        dy = my - Tiro.getY();
        y_inicial = Tiro.getY();
        x_inicial = Tiro.getX();

        if (dx < 0) {
            direction = false;
        } else {
            direction = true;
        }

        Tiro.setSobeBolha(true);
    }//GEN-LAST:event_formMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame1().setVisible(true);
            }
        });
    }

    @Override
    public void run() {
        while (true) {
            GeradorBolhas b = new GeradorBolhas();
            ArrayList<Bolhas> bubbles = b.gerarBubbles(getWidth());
            Random corAleatoria = new Random();

            setSize(440, 560);

            Tiro = new BolhaTiro(190, 500);
            Tiro.cor = bubbles.get(corAleatoria.nextInt(bubbles.size())).cor;
            Tiro.setSobeBolha(false);

            direction = true;

            while (true) {
                Graphics g = getBufferStrategy().getDrawGraphics();

                g.clearRect(0, 0, getWidth(), getHeight());

                for (Bolhas bubble : bubbles) {
                    if (bubble.visivel == true) {
                        g.setColor(bubble.getColor());
                        g.fillOval(bubble.getX(), bubble.getY(), bubble.getWidth(), bubble.getHeight());
                    }
                }

                if (mx < 410) {
                    g.drawLine(Tiro.getX() + 17, Tiro.getY() + 17, mx, my);
                }

                if (my < 500) {
                    g.drawLine(Tiro.getX() + 17, Tiro.getY() + 17, mx, my);
                }

                if (Tiro.visivel == true) {
                    Tiro.desenharTiro(g);
                }

                g.setColor(Color.BLACK);
                g.drawRect(10, 40, 410, 500);

                if (dy != 0) {
                    double value = (Math.abs(dx) / Math.abs(dy));

                    if (!direction) {
                        value *= -1;
                    }

                    if (Tiro.getX() > 385 && direction) {
                        y_inicial = Tiro.getY();
                        x_inicial = Tiro.getX();
                        direction = false;
                    }

                    if (Tiro.getX() <= 10 && !direction) {
                        y_inicial = Tiro.getY();
                        x_inicial = Tiro.getX();
                        direction = true;
                    }

                    int y_dx = y_inicial - Tiro.getY();

                    Tiro.setX((int) Math.floor(x_inicial + value * y_dx));
                }

                Tiro.Subir();

                boolean addTiro = false;
                Bolhas newBolha = null;

                for (Bolhas bolha : bubbles) {

                    if (!bolha.visivel) {
                        continue;
                    }

                    if (Tiro.getLimites().intersects(bolha.getLimites())) {

                        if (Tiro.cor.equals(bolha.cor)) {

                            Rectangle rWidth = new Rectangle(bolha.getX() + 2, bolha.getY() + 2, bolha.getWidth() - 4, bolha.getHeight() - 4);
                            Rectangle rHeight = new Rectangle(bolha.getX() + 2, bolha.getY() + 2, bolha.getWidth() - 4, bolha.getHeight() - 4);

                            boolean intersected1 = false;
                            boolean intersected2 = false;

                            do {
                                intersected1 = false;
                                intersected2 = false;

                                for (Bolhas bolha2 : bubbles) {
                                    if (bolha2.visivel && Tiro.cor.equals(bolha2.cor)) {
                                        if (rWidth.intersects(bolha2.getLimites())) {
                                            intersected1 = true;
                                            bolha2.visivel = false;
                                        } else if (rHeight.intersects(bolha2.getLimites())) {
                                            intersected2 = true;
                                            bolha2.visivel = false;
                                        }
                                    }
                                }

                                rWidth.x -= bolha.getWidth();
                                rHeight.y -= bolha.getHeight();
                                rWidth.width += bolha.getWidth() * 2;
                                rHeight.height += bolha.getHeight() * 2;
                            } while (intersected1 || intersected2);

                            bolha.visivel = false;
                        } else {
                            Tiro.speedY = 0;
                            addTiro = true;
                            newBolha = new Bolhas(Tiro.getX(), Tiro.getY(), bubbles.get(0).getWidth(), bubbles.get(0).getHeight(), Tiro.cor);
                            newBolha.visivel = true;
                        }

                        List<Bolhas> bolhasVisiveis = bubbles.stream().filter(f -> f.visivel).collect(Collectors.toList());

                        if (bolhasVisiveis.size() > 0) {
                            Tiro = new BolhaTiro(190, 500);

                            y_inicial = Tiro.getY();
                            x_inicial = Tiro.getX();
                            direction = true;
                            Tiro.cor = bolhasVisiveis.get(corAleatoria.nextInt(bolhasVisiveis.size())).cor;
                        } else {
                            Tiro.speedY = 0;
                        }
                    } else if (Tiro.getY() < 40) {
                        Tiro.speedY = 0;

                        addTiro = true;
                        newBolha = new Bolhas(Tiro.getX(), Tiro.getY(), bubbles.get(0).getWidth(), bubbles.get(0).getHeight(), Tiro.cor);
                        newBolha.visivel = true;
                    }
                }

                if (addTiro) {
                    bubbles.add(newBolha);
                }

                g.dispose();
                getBufferStrategy().show();

                try {
                    Thread.sleep(3);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Frame1.class.getName()).log(Level.SEVERE, null, ex);
                }

                if (bubbles.stream().filter(f -> f.visivel).count() == 0) {
                    break;
                }
            }
        }
    }

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

